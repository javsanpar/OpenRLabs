server {
        listen          80;
        server_name     $SERVER_RLABS;

	return 301 https://$server_name$request_uri;	
}

map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
}
 
# Pool de servidores. Permite hacer balanceo de carga.

upstream guacamole {
    server $SERVER_GUAC:$PORT_WS; # appserver_ip:ws_port
}

# Servicio que realiza reverse proxy y traslaci√≥n (upgrade) de protocolosi: https + ws == wss <--> ws
server {
        listen $PORT_WSS;
	ssl on;
        ssl_certificate         /etc/nginx/ssl/web2py.crt;
        ssl_certificate_key     /etc/nginx/ssl/web2py.key;

        location / {
            proxy_pass http://guacamole;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }

server {
        listen 443 default_server ssl;
        server_name     $SERVER_RLABS;
        ssl_certificate         /etc/nginx/ssl/web2py.crt;
        ssl_certificate_key     /etc/nginx/ssl/web2py.key;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_ciphers ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-DSS-AES256-SHA:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA;
        ssl_protocols SSLv3 TLSv1;
        keepalive_timeout    70;

	location ~* /(\w+)/static/ {
            root $W2PDIR/applications/;
            #remove next comment on production
            expires max;
	}

        location / {
            include         uwsgi_params;
            uwsgi_param     UWSGI_SCHEME $scheme;
            uwsgi_param     SERVER_SOFTWARE    nginx/$nginx_version;
            uwsgi_pass      unix:/tmp/web2py.socket;
	    uwsgi_read_timeout 360;
	}
	
}
